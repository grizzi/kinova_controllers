<?xml version="1.0"?>
<launch>
    <arg name="simulation" default="false"/>
    <arg name="test" default="false"/>
    <arg name="start_mission_delay" default="10.0"/>

    <!-- Load controllers -->
    <!-- MPC -->
    <include file="$(find kinova_mpc_controllers)/launch/controller.launch">
        <arg name="prefix" value="arm_"/>
        <arg name="simulation" value="$(arg simulation)"/>
        <arg name="namespace" value="my_gen3"/>
    </include>
    <!-- Joint Trajectory -->
    <include file="$(find kinova_joint_trajectory_controller)/launch/load_controller.launch">
        <arg name="prefix" value="arm_"/>
        <arg name="namespace" value="my_gen3"/>
    </include>
        <!-- Reflex controller -->
    <include file="$(find kinova_reflex_controller)/launch/load_params.launch">
        <arg name="namespace" value="my_gen3"/>
    </include>

    
    <!-- Remap description for moveit commander -->
    <param name="/moveit_planner/description_name" value="/my_gen3/robot_description"/>
    <param name="/moveit_planner/namespace" value="my_gen3"/>
    <param name="/moveit_planner/arm_group_name" value="arm"/>

    <!--   Mock modules to test state machine without sim -->
    <group if="$(arg test)">
        <param name="/moveit_planner/fake_execution" value="true"/>
        <include file="$(find kinova_valve_opening)/launch/piloting_mock_modules.launch"/>
        <node name="rviz" pkg="rviz" type="rviz" args="-d $(find kinova_valve_opening)/config/sm_test.rviz"/>
    </group>


    <!-- Simulation mission config and valve in gazebo -->
    <group if="$(arg simulation)">
        <rosparam command="load" file="$(find kinova_valve_opening)/config/mission_sim.yaml" subst_value="true"/>
        <include file="$(find kinova_valve_opening)/launch/load_valve.launch"/>
        <node name="controllers_spawner" pkg="controller_manager" type="spawner" respawn="false"
              output="screen" args="--stopped mpc_sim" ns="my_gen3"/>
    </group>

    <group unless="$(arg simulation)">
        <rosparam command="load" file="$(find kinova_valve_opening)/config/mission_robot.yaml" subst_value="true"/>
        <node name="controllers_spawner" pkg="controller_manager" type="spawner" respawn="false"
              output="screen" args="--stopped mpc_admittance_torque joint_trajectory_controller" ns="my_gen3"/>
        <node name="target_base_publisher" pkg="tf2_ros" type="static_transform_publisher" args="2.14 -0.75 0.0 -0.873 0.0 0.0 map navigation_target"/>      
    </group>

    <!--    State machine -->
    <node pkg="kinova_valve_opening" type="piloting_demo.py" name="piloting_demo" output="screen" launch-prefix="bash -c 'sleep $(arg start_mission_delay); $0 $@'">
      <param name="valve_radius" value="0.12"/>
      <param name="valve_frame" value="object_detection_mesh"/>
      <param name="base_frame" value="arm_base_link"/>
      <param name="tool_frame" value="arm_tool_frame"/>
    </node>
</launch>
