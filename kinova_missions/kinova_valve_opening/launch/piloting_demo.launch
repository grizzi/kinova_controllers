<?xml version="1.0"?>
<launch>
    <arg name="enable_viewer" default="false"/>
    <arg name="description_for_moveit" default="/my_gen3/robot_description"/>
    <arg name="test" default="false"/>
    <arg name="simulation" default="false"/>
    <arg name="use_apriltag" default="false"/>
    <arg name="launch_gripper" default="false"/>

    <!-- Remap description for moveit commander -->
    <param name="/moveit_planner/description_name" value="$(arg description_for_moveit)"/>
    <param name="/moveit_planner/namespace" value="my_gen3"/>
    <param name="/moveit_planner/arm_group_name" value="arm"/>

    <!--   Mock modules to test state machine without sim -->
    <group if="$(arg test)">
        <param name="/moveit_planner/fake_execution" value="true"/>
        <include file="$(find kinova_valve_opening)/launch/piloting_mock_modules.launch"/>
        <node name="rviz" pkg="rviz" type="rviz" args="-d $(find kinova_valve_opening)/config/sm_test.rviz"/>
    </group>

    <!--    State dependent parameters -->
    <arg name="valve_radius" default="0.065"/>

    <!-- MPC controllers -->
    <include file="$(find kinova_mpc_controllers)/launch/controller.launch">
        <arg name="prefix" value="arm_"/>
        <arg name="simulation" value="$(arg simulation)"/>
        <arg name="namespace" value="my_gen3"/>
    </include>
    
    <!--    Force sensor and filtering/compensation relay node-->
    <group if="$(arg launch_ft_sensor)">
      <include file="$(sensor_tools)/launch/ft_sensor_standalone.launch"/>
      <node name="reflex_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
              output="screen" args="reflex_controller"/>
    </group>
    
    <!-- Reflex controller -->
    <include file="$(find kinova_reflex_controller)/launch/load_params.launch">
        <arg name="namespace" value="my_gen3"/>
    </include>

    <!--    Gripper control-->
    <group if="$(arg launch_gripper)">
        <include file="$(find robotiq_2f_gripper_action_server)/launch/robotiq_2f_gripper_action_server.launch">
            <arg name="gripper_name" value="/my_gen3/arm_robotiq_2f_85_gripper_controller/gripper_cmd"/>
        </include>
    </group>

    <group if="$(arg simulation)">
        <rosparam command="load" file="$(find kinova_valve_opening)/config/mission_sim.yaml" subst_value="true"/>

        <!-- Load valve model in simulation -->
        <include file="$(find kinova_valve_opening)/launch/load_valve.launch"/>
    </group>

    <group unless="$(arg simulation)">
        <rosparam command="load" file="$(find kinova_valve_opening)/config/mission_robot.yaml" subst_value="true"/>
        <node name="controllers_spawner" pkg="controller_manager" type="spawner" respawn="false"
              output="screen" args=" --stopped mpc_velocity_controller"/>

        <!--   Apriltag detection -->
        <group if="$(arg use_apriltag)">
            <include file="$(find kinova_valve_opening)/apriltag/apriltag_detection.launch"/>
        </group>
        <group unless="$(arg use_apriltag)">
            <node name="valve_broadcaster" type="static_transform_publisher" pkg="tf2_ros"
                  args="-0.14509 0.55719 0.18251 0.707 0 0 0.707 arm_base_link valve_base"/>
        </group>
    </group>

    <!-- From apriltag: -0.201, 0.763, 0.391 0.717, -0.695, -0.040, 0.008 -->
    <!--    State machine -->
    <node pkg="kinova_valve_opening" type="piloting_demo.py" name="piloting_demo" output="screen"/>

    <!--    Smach viewer -->
    <group if="$(arg enable_viewer)">
        <node pkg="smach_viewer" type="smach_viewer.py" name="smach_viewer_node" output="screen"/>
    </group>

    <node name="rviz_mission" pkg="rviz" type="rviz" args="-d $(find kinova_valve_opening)/config/config.rviz"
          unless="$(arg test)"/>
</launch>